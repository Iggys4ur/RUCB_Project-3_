{
    "placeholders": {
        "<API>": "The name of the API, e.g., XBOX, Google, Twitter",
        "<API_endpoint_url>": "The base URL for the API endpoint",
        "<Your_API_Key>": "Your API key or token for authentication",
        "<PROFILE_PATH>": "Path to your PowerShell profile",
        "<VARIABLE_NAME>": "Name of the environment variable",
        "<VARIABLE_VALUE>": "Value to assign to the environment variable",
        "<SCOPE>": "Scope of the environment variable ('User', 'Machine', 'Process')",
        "<userId>": "User ID for which to fetch data"
    },
    "api_name": "<API>",
    "directory": "<API>/",
    "files": [
        {
            "file_name": "<API>_API.ps1",
            "description": "A PowerShell script that serves as a template for accessing user data using the <API> API. The script is well-documented, generalized, and designed to be a reusable template.",
            "content": [
                "# <API>-Template_<API>.ps1",
                "",
                "# This script provides a template for utilizing the <API> API to access user data.",
                "# The script is well-documented and generalized to serve as a reusable template.",
                "#",
                "# Usage:",
                "#   To use this script, replace the placeholders with your specific API credentials and",
                "#   parameters as needed. This script demonstrates how to authenticate and fetch user",
                "#   data from the <API> API.",
                "#",
                "# Global Variables:",
                "$Global:apiEndpoint = '<API_endpoint_url>'",
                "$Global:apiKey = '<Your_API_Key>'",
                "",
                "# Function to authenticate and fetch user data",
                "function Get-UserDataFrom<API> {",
                "    param(",
                "        [string]$userId",
                "    )",
                "",
                "    # Replace <API_endpoint_url> with the actual API endpoint",
                "    $url = \"$($Global:apiEndpoint)/users/$userId/data\"",
                "",
                "    # Example of using Invoke-RestMethod to fetch data",
                "    $response = Invoke-RestMethod -Uri $url -Headers @{ 'Authorization' = \"Bearer $($Global:apiKey)\" }",
                "    return $response",
                "}",
                "",
                "# Example usage of the function",
                "$userData = Get-UserDataFrom<API> -userId 'exampleUserId'",
                "Write-Host \"User Data: $($userData)\""
            ]
        },
        {
            "file_name": "<API>_API.md",
            "description": "A beautifully formatted, colored, and linted Markdown file documenting the <API>_API.ps1 file.",
            "content": [
                "# <API> API PowerShell Template - <API>_API.ps1",
                "",
                "## Overview",
                "",
                "This PowerShell script serves as a template for accessing user data via the <API> API. It demonstrates how to set up authentication and retrieve user information using standard PowerShell cmdlets.",
                "",
                "## Script Components",
                "",
                "### Global Variables",
                "",
                "- `$Global:apiEndpoint`: The base URL of the <API> API.",
                "- `$Global:apiKey`: Your API key for authenticating with the <API> API.",
                "",
                "### Functions",
                "",
                "- **Get-UserDataFrom<API>**: A function that takes a user ID as input and fetches user data from the <API> API.",
                "  - **Parameters**: `[string]$userId` - The ID of the user whose data is to be fetched.",
                "  - **Output**: The user data returned by the <API> API.",
                "",
                "### Example Usage",
                "",
                "To use this script, replace the placeholders in the function with your specific API credentials and parameters. Then, call the function with the appropriate user ID:",
                "",
                "```powershell",
                "$userData = Get-UserDataFrom<API> -userId 'exampleUserId'",
                "Write-Host \"User Data: $($userData)\"",
                "```",
                "",
                "## Notes",
                "",
                "- Ensure you have the necessary permissions to access user data via the <API> API.",
                "- Replace the placeholder values with actual API endpoint URLs, API keys, and user IDs as required.",
                "",
                "## Conclusion",
                "",
                "This script provides a flexible and reusable template for accessing user data via the <API> API. Customize the script to fit your specific needs and expand its functionality as required."
            ]
        }
    ]
}